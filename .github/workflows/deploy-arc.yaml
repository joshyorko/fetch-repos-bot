name: Deploy ARC Runner

on:
  workflow_dispatch:  # Allow manual triggering
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'repos/fetch-repos/values.yaml'

jobs:
  deploy:
    runs-on: fetch-repos-bot-runner-k8s
    # Only run this job if the PR was merged
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > $HOME/.kube/config
          echo "Kubeconfig created at $HOME/.kube/config"
          kubectl get nodes # Test command
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}

      - name: Create ARC Private Key file from secret
        run: |
          # The filename must match what install-upgrade-arc.sh expects or can find.
          echo "${{ secrets.ARC_PRIVATE_KEY }}" | base64 -d > arc-private-key.pem
          echo "arc-private-key.pem created from secret."
        env:
          ARC_PRIVATE_KEY: ${{ secrets.ARC_PRIVATE_KEY }}

      - name: Ensure Python and pip are installed
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip

      - name: Create pre-defined-secret.yaml from ARC_PRIVATE_KEY secret
        run: echo "$ARC_PRIVATE_KEY" | base64 -d > pre-defined-secret.yaml
        env:
          ARC_PRIVATE_KEY: ${{ secrets.ARC_PRIVATE_KEY }}

      - name: Run install script
        run: |
          chmod +x scripts/install-upgrade-arc.sh
          ./scripts/install-upgrade-arc.sh fetch-repos
