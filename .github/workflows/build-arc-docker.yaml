name: Build and Push Fetch Repos Bot Runner Docker Image

on:
  push:
    paths:
      - 'robot.yaml'
      - 'conda.yaml'
      - 'arc-docker/**'
  pull_request:
    paths:
      - 'robot.yaml'
      - 'conda.yaml'
      - 'arc-docker/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/fetch-repos-bot-runner

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # was: read
      packages: write
      pull-requests: write     # ← add this line

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Log in to Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Copy configuration files to arc-docker directory
        run: |
          cp robot.yaml arc-docker/
          cp conda.yaml arc-docker/

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set NEW_TAG output
        id: set_tag
        run: |
          TAGS="${{ steps.meta.outputs.tags }}"
          # Get the first tag that is not 'latest', keep the full image:tag string
          NEW_TAG=$(echo "$TAGS" | tr ',' '\n' | grep -v ':latest' | head -n1)
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./arc-docker
          file: ./arc-docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Clean up copied files
        run: |
          rm -f arc-docker/robot.yaml arc-docker/conda.yaml

      - name: Update image tag in values.yaml and GitHub Actions workflows
        env:
          NEW_TAG: ${{ steps.set_tag.outputs.NEW_TAG }}
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        uses: mikefarah/yq@v4.45.4
        with:
          cmd: |
            echo "Updating arc-docker/values.yaml to use tag $NEW_TAG"
            # Extract just the tag part from the full image reference
            TAG_ONLY=$(echo "$NEW_TAG" | awk -F: '{print $2}')
            echo "Using tag: $TAG_ONLY"
            FULL_REF="${REGISTRY}/${IMAGE_NAME}:${TAG_ONLY}"
            echo "Full image reference: $FULL_REF"
            
            yq -i '.template.spec.containers[0].image |= sub("ghcr.io/joshyorko/fetch-repos-bot-runner:[^ ]*", env(FULL_REF))' arc-docker/values.yaml
            echo "Updating .github/workflows/fetch-repos-matrix-hosted.yaml to use tag $NEW_TAG"
            yq -i '.jobs.producer.container.image |= sub("ghcr.io/joshyorko/fetch-repos-bot-runner:[^ ]*", env(FULL_REF))' .github/workflows/fetch-repos-matrix-hosted.yaml

      - name: Create or update tag-bump PR
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: chore/update-runner-image          # re-uses same branch each run
          commit-message: |
            chore: update runner image tag to ${{ steps.set_tag.outputs.NEW_TAG }}
          title: "chore: bump runner image → ${{ steps.set_tag.outputs.NEW_TAG }}"
          body: |
            Automated build updated:
            • arc-docker/values.yaml  
            • .github/workflows/fetch-repos-matrix-hosted.yaml
            
            _Generated by the Build & Push workflow._
          labels: automerge,image-update
          reviewers: jyorko
          draft: false
