name: Build & Push Fetch-Repos Bot Runner image (Kaniko)

on:
  push:
    paths:
      - 'robot.yaml'
      - 'conda.yaml'
      - 'repos/fetch-repos/Dockerfile'
  pull_request:
    paths:
      - 'robot.yaml'
      - 'conda.yaml'
      - 'repos/fetch-repos/Dockerfile'
  workflow_dispatch:

env:
  KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"

concurrency:
  group: kaniko-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-to-ghcr:
    runs-on: fetch-repos-bot-runner-k8s-kaniko

    container:
      image: gcr.io/kaniko-project/executor:v1.23.2-debug

    permissions:
      contents: read
      packages: write          # push to GHCR

    steps:
      - name: Build and Push Image to GHCR with kaniko
        id: kaniko_build
        env:
          GIT_USERNAME: ${{ github.actor }}
          GIT_PASSWORD: ${{ secrets.CR_PAT }}
        run: |
          REPO_OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_BASE=ghcr.io/$REPO_OWNER_LC/fetch-repos-bot-runner
          CACHE_IMG=ghcr.io/$REPO_OWNER_LC/fetch-repos-bot-runner-cache
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}" | tr '/' '-')
          SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
          MAIN_BRANCH="main"
          MAIN_SHA_TAG="$IMAGE_BASE:main-$SHORT_SHA"
          LATEST_TAG="$IMAGE_BASE:latest"
          BRANCH_SHA_TAG="$IMAGE_BASE:$BRANCH_NAME-$SHORT_SHA"
          cat <<EOF > /kaniko/.docker/config.json
          {
            "auths": {
              "ghcr.io": {
                "auth": "$(echo -n "$GIT_USERNAME:$GIT_PASSWORD" | base64 -w0)"
              }
            }
          }
          EOF

          if [ "$BRANCH_NAME" = "$MAIN_BRANCH" ]; then
            /kaniko/executor --dockerfile="repos/fetch-repos/Dockerfile" \
              --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
              --destination="$MAIN_SHA_TAG" \
              --destination="$LATEST_TAG" \
              $KANIKO_CACHE_ARGS \
              --cache-repo="$CACHE_IMG" \
              --push-retry 5
            echo "NEW_TAG=$MAIN_SHA_TAG" >> $GITHUB_ENV
          else
            /kaniko/executor --dockerfile="repos/fetch-repos/Dockerfile" \
              --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
              --destination="$BRANCH_SHA_TAG" \
              $KANIKO_CACHE_ARGS \
              --cache-repo="$CACHE_IMG" \
              --push-retry 5
            echo "NEW_TAG=$BRANCH_SHA_TAG" >> $GITHUB_ENV
          fi

      - name: Set NEW_TAG output
        id: set_tag
        run: |
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_OUTPUT
    outputs:
      image_tag: ${{ steps.set_tag.outputs.NEW_TAG }}

  update-values-and-pr:
    runs-on: ubuntu-latest
    needs: build-to-ghcr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Update image tag in values.yaml only
        env:
          NEW_TAG: ${{ needs.build-to-ghcr.outputs.image_tag }}
        uses: mikefarah/yq@v4.45.4
        with:
          cmd: |
            echo "Updating repos/fetch-repos/values.yaml to use tag $NEW_TAG"
            yq -i '.template.spec.containers[0].image = strenv(NEW_TAG)' repos/fetch-repos/values.yaml

      - name: Create or update tag-bump PR
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: chore/update-runner-image
          commit-message: |
            chore: update runner image tag to ${{ needs.build-to-ghcr.outputs.image_tag }}
          title: "chore: bump runner image → ${{ needs.build-to-ghcr.outputs.image_tag }}"
          body: |
            Automated build updated:
            • repos/fetch-repos/values.yaml
          reviewers: joshyorko
          draft: false