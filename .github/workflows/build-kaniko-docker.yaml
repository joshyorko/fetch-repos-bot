name: Build & Push Fetch-Repos Bot Runner image (Kaniko)

on:
  #push:
  #  paths:
  #    - 'robot.yaml'
  #    - 'conda.yaml'
  #    - 'repos/fetch-repos/Dockerfile'
  #pull_request:
  #  paths:
  #    - 'robot.yaml'
  #    - 'conda.yaml'
  #    - 'repos/fetch-repos/Dockerfile'
  workflow_dispatch:

env:
  KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"

concurrency:
  group: kaniko-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-to-ghcr:
    runs-on: fetch-repos-bot-runner-k8s-kaniko

    container:
      image: gcr.io/kaniko-project/executor:v1.24.0-debug

    permissions:
      contents: read
      packages: write          # push to GHCR

    steps:
      - name: Build and Push Image to GHCR with kaniko
        id: kaniko_build
        env:
          GIT_USERNAME: ${{ github.actor }}
          GIT_PASSWORD: ${{ secrets.CR_PAT }}
        run: |
          REPO_OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_BASE=ghcr.io/$REPO_OWNER_LC/fetch-repos-bot-runner
          CACHE_IMG=ghcr.io/$REPO_OWNER_LC/fetch-repos-bot-runner-cache
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}" | tr '/' '-')
          SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
          MAIN_BRANCH="main"
          MAIN_SHA_TAG="$IMAGE_BASE:main-$SHORT_SHA"
          LATEST_TAG="$IMAGE_BASE:latest"
          BRANCH_SHA_TAG="$IMAGE_BASE:$BRANCH_NAME-$SHORT_SHA"
          cat <<EOF > /kaniko/.docker/config.json
          {
            "auths": {
              "ghcr.io": {
                "auth": "$(echo -n "$GIT_USERNAME:$GIT_PASSWORD" | base64 -w0)"
              }
            }
          }
          EOF

          if [ "$BRANCH_NAME" = "$MAIN_BRANCH" ]; then
            /kaniko/executor --dockerfile="repos/fetch-repos/Dockerfile" \
              --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
              --destination="$MAIN_SHA_TAG" \
              --destination="$LATEST_TAG" \
              $KANIKO_CACHE_ARGS \
              --cache-repo="$CACHE_IMG" \
              --push-retry 5
            echo "NEW_TAG=$MAIN_SHA_TAG" >> $GITHUB_ENV
            echo "BUILT_TAGS=$MAIN_SHA_TAG,$LATEST_TAG" >> $GITHUB_ENV
          else
            /kaniko/executor --dockerfile="repos/fetch-repos/Dockerfile" \
              --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
              --destination="$BRANCH_SHA_TAG" \
              $KANIKO_CACHE_ARGS \
              --cache-repo="$CACHE_IMG" \
              --push-retry 5
            echo "NEW_TAG=$BRANCH_SHA_TAG" >> $GITHUB_ENV
            echo "BUILT_TAGS=$BRANCH_SHA_TAG" >> $GITHUB_ENV
          fi
          
          # Export variables for build summary
          echo "IMAGE_BASE=$IMAGE_BASE" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV

      - name: Set NEW_TAG output
        id: set_tag
        run: |
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "IMAGE_BASE=${IMAGE_BASE}" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "BUILT_TAGS=${BUILT_TAGS}" >> $GITHUB_OUTPUT
    outputs:
      image_tag: ${{ steps.set_tag.outputs.NEW_TAG }}
      image_base: ${{ steps.set_tag.outputs.IMAGE_BASE }}
      branch_name: ${{ steps.set_tag.outputs.BRANCH_NAME }}
      short_sha: ${{ steps.set_tag.outputs.SHORT_SHA }}
      built_tags: ${{ steps.set_tag.outputs.BUILT_TAGS }}

  update-values-and-pr:
    runs-on: ubuntu-latest
    needs: build-to-ghcr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Update image tag in values.yaml only
        env:
          NEW_TAG: ${{ needs.build-to-ghcr.outputs.image_tag }}
        uses: mikefarah/yq@v4.45.4
        with:
          cmd: |
            echo "Updating repos/fetch-repos/values.yaml to use tag $NEW_TAG"
            yq -i '.template.spec.containers[0].image = strenv(NEW_TAG)' repos/fetch-repos/values.yaml

      - name: Create or update tag-bump PR
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: chore/update-runner-image
          commit-message: |
            chore: update runner image tag to ${{ needs.build-to-ghcr.outputs.image_tag }}
          title: "chore: bump runner image → ${{ needs.build-to-ghcr.outputs.image_tag }}"
          body: |
            Automated build updated:
            • repos/fetch-repos/values.yaml
          reviewers: joshyorko
          draft: false

      - name: Add build and update summary
        if: always()
        env:
          IMAGE_TAG: ${{ needs.build-to-ghcr.outputs.image_tag }}
          IMAGE_BASE: ${{ needs.build-to-ghcr.outputs.image_base }}
          BRANCH_NAME: ${{ needs.build-to-ghcr.outputs.branch_name }}
          SHORT_SHA: ${{ needs.build-to-ghcr.outputs.short_sha }}
          BUILT_TAGS: ${{ needs.build-to-ghcr.outputs.built_tags }}
        run: |
          echo "## 🐳 Fetch-Repos Bot Runner Docker Image Built (Kaniko)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Details" >> $GITHUB_STEP_SUMMARY
          echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Image Base** | \`$IMAGE_BASE\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Primary Tag** | \`$IMAGE_TAG\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Commit SHA** | \`${{ github.sha }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Short SHA** | \`$SHORT_SHA\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Branch** | \`$BRANCH_NAME\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Runner** | \`${{ runner.name }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Build Tool** | Kaniko v1.24.0 |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Built Tags" >> $GITHUB_STEP_SUMMARY
          IFS=',' read -ra TAGS <<< "$BUILT_TAGS"
          for tag in "${TAGS[@]}"; do
            echo "- \`$tag\`" >> $GITHUB_STEP_SUMMARY
          done
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pull Command" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "docker pull $IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Context**: \`${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Dockerfile**: \`repos/fetch-repos/Dockerfile\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: \`linux/amd64\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Cache**: Enabled (24h TTL)" >> $GITHUB_STEP_SUMMARY
          echo "- **Push Retries**: 5" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📝 Values Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Updated \`repos/fetch-repos/values.yaml\` with new image tag:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**New Tag**: \`$IMAGE_TAG\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "A pull request has been created to merge these changes." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Job summary generated at $(date -u '+%Y-%m-%d %H:%M:%S UTC')_" >> $GITHUB_STEP_SUMMARY